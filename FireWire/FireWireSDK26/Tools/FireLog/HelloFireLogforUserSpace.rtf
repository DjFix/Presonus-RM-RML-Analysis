{\rtf1\ansi\ansicpg1252\cocoartf949
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 LucidaGrande;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset0 Monaco;\f4\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red104\green56\blue33;\red118\green15\blue80;\red35\green110\blue37;
\red137\green19\blue21;\red0\green0\blue255;}
\margl1440\margr1440\vieww14540\viewh11960\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b\fs36 \cf0 \ul \ulc0 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\li1120\fi-40\ri860\ql\qnatural

\f1 \cf0 \ulnone "Hello, FireLog" for User Space- adding FireLog to a User Space Application
\fs48 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b0\fs24 \cf0 \
\pard\tx1100\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1080\ri-2220\ql\qnatural

\f1 \cf0 Note: These instructions are for using FireLog from a user space application . Tutorial HelloFireLogforKexts describes how to use FireLog from kernel extension. \
\
1. Installing the Firelog package on your target machine. (This step is the same\
for user space or kernel extensions.)\
\

\f2 		Copy from the package from the latest installed SDK:\
/Developer/FireWireSDKnn/Tools/FireLog/FireLog 2.0.0.pkg\
	\
Install the package on the target machine.\
\
If the installer fails for any reason, or if the installer warns that you are installing over a newer version,  delete the old FireLog.pkg receipt in the directory /Library/Receipts and start the install over again. \
\
When the package has been installed, reboot your machine.\
\
2. Copying the FireLog app to your "observer machine". 
\f1  (This step is the same\
for user space or kernel extensions.)
\f2 \
\
	 Copy from the latest installed SDK:\
	/Developer/FireWireSDKnn/Tools/FireLog/FireLog 2.0.0.pkg\
  You will run the app later. \
\
3. Finding a user space application to use.\
    \
You can use one of your own applications, or you can create a sample application by following these steps. \
\
In the XCode File menu, select "New Project"\
In the NewProject dialog, select Command Line Utility, CoreFoundation Tool\
press the Next button\
select a name and location for your project,\
Press the Finish Button\
\
This will create your project.\
\
4. Adding FireLog to your app.\
\
Open the main.c file. \
Add the other code which you would like to include\
	Add 
\f3\fs20 <FireLog/FireLog.h>
\f2\fs24  to your main.c source file\
	Add calls to 
\f3\fs20 FireLog()
\f2\fs24  with printf style formatting and arguments\
Add 
\f3\fs20 \CocoaLigature0 CreateFireLogUserClient( ); 
\f2\fs24 \CocoaLigature1 before your first call to FireLog\
Add 
\f3\fs20 \CocoaLigature0 DestroyFireLogUserClient( ); 
\f2\fs24 \CocoaLigature1 after your last call to FireLog\
\
\
\
In our example, we would like to compare how many microseconds it takes to do 10 printf calls \
vs 10 FireLog log messages. The new main.c looks like this:
\f4 \
\pard\tx1100\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1100\fi-20\ri-2220\ql\qnatural\pardirnatural

\f3\fs20 \cf0 \CocoaLigature0 \
\pard\tx480\tx960\tx1440\tx1920\tx2400\tx2880\tx3360\tx3840\tx4320\tx4800\tx5280\tx5760\tx6240\tx6720\tx7200\tx7680\tx8160\tx8640\tx9120\tx9600\tx10080\tx10560\tx11040\tx11520\tx12000\tx12480\tx12960\tx13440\tx13920\tx14400\tx14880\tx15360\tx15840\tx16320\tx16800\tx17280\tx17760\tx18240\tx18720\tx19200\tx19680\tx20160\tx20640\tx21120\tx21600\tx22080\tx22560\tx23040\tx23520\tx24000\tx24480\tx24960\tx25440\tx25920\tx26400\tx26880\tx27360\tx27840\tx28320\tx28800\tx29280\tx29760\tx30240\tx30720\tx31200\tx31680\tx32160\tx32640\tx33120\tx33600\tx34080\tx34560\tx35040\tx35520\tx36000\tx36480\tx36960\tx37440\tx37920\tx38400\tx38880\tx39360\tx39840\tx40320\tx40800\tx41280\tx41760\tx42240\tx42720\tx43200\tx43680\tx44160\tx44640\tx45120\tx45600\tx46080\tx46560\tx47040\tx47520\tx48000\ql\qnatural\pardirnatural
\cf2 			#include <CoreFoundation/CoreFoundation.h>\cf0 \
\
\cf2 			#include <FireLog/FireLog.h>\cf0 \
\cf2 			#include <sys/time.h>\cf0 \
\
\cf3 			int\cf0  main (\cf3 int\cf0  argc, \cf3 const\cf0  \cf3 char\cf0  * argv[]) \{\
    			\cf4 // insert code here...\cf0 \
\
				\cf3 struct\cf0  timeval myTimeValStart;				\cf4 // variables used to get the start and end times\cf0 \
				\cf3 struct\cf0  timeval myTimeValEnd;\
				\cf3 struct\cf0  timezone myTimeZone;					\cf4 // needed for the call to gettimeofday()\cf0 \
				\cf3 int\cf0  i;\
	\
    			CFShow(CFSTR(\cf5 "Hello, World!\\n"\cf0 ));			\cf4 // from the original code generated by XCode\cf0 \
				\
				// printf\
				gettimeofday(&myTimeValStart,&myTimeZone);	\cf4 // get start time\cf0 \
				\cf3 for\cf0  (i = \cf6 0\cf0 ; i < \cf6 10\cf0  ; i++)\
					printf(\cf5 "Hello, printf. \\n"\cf0 );			\cf4 // output using printf\cf0 \
				gettimeofday(&myTimeValEnd,&myTimeZone);	\cf4 // get ending time\cf0 \
				printf(\cf5 "printf testing result microseconds %d\\n"\cf0 , myTimeValEnd.tv_usec - myTimeValStart.tv_usec);\
				\
				// FireLog\
				CreateFireLogUserClient( );					\cf4 // initialize before calls to FireLog\cf0 \
				gettimeofday(&myTimeValStart,&myTimeZone);	\cf4 // get start time\cf0 \
				\cf3 for\cf0  (i = \cf6 0\cf0 ; i < \cf6 10\cf0  ; i++)\
					FireLog(\cf5 "Hello, FireLog. \\n"\cf0 );			\cf4 // output using FireLog\cf0 \
				gettimeofday(&myTimeValEnd,&myTimeZone);	\cf4 // get ending time\cf0 \
				FireLog(\cf5 "FireLog testing result microseconds %d  \\n"\cf0 , myTimeValEnd.tv_usec - myTimeValStart.tv_usec);\
				DestroyFireLogUserClient( );				\cf4 // clean up after calls to FireLog\cf0 \
	\
    			\cf3 return\cf0  \cf6 0\cf0 ;\
			\}\
\
\pard\tx1100\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1080\ri-2220\ql\qnatural\pardirnatural
\cf0 \

\f2\fs24 5.	Adding the FireWire framework to the project.\
\
In your project, highlight the folder "External Frameworks and Libraries"\
Control click to get the menu\
Select:  Add/Existing Frameworks...\
Select: Frameworks/FireLog.framework\
Press the Add button\
In the next dialog, press the Add button again\
\
\pard\tx1100\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1080\ri-2220\ql\qnatural
\cf0 \CocoaLigature1 Build your app with the framework added. \
\pard\tx1100\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1080\ri-2220\ql\qnatural\pardirnatural
\cf0 \
6. Starting up FireLog application on the observer machine. 
\f1 (This step is the same\
\pard\tx1100\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1080\ri-2220\ql\qnatural
\cf0 for user space or kernel extensions.)\
\pard\tx1100\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1080\ri-2220\ql\qnatural\pardirnatural

\f2 \cf0 \
\
Connect the machines with a FireWire Cable\
Double click on the FireLog application to start it up\
In the FWDevices window, highlight the device shown \
(It will say something like "IOFireWireUnit <0x393>") , and press select\
\
You will get a window for your device. \
Press the RESUME button to allow it to receive log messages.\
\
\
9.  Running your Application.\
\
In the XCode Debug menu, select Run Log\
In the Run Log,  press the Run button\
\
\pard\tx1100\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1080\ri-2220\ql\qnatural

\f3\fs22 \cf0 \
\pard\tx1100\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li1080\ri-2220\ql\qnatural

\f2\fs24 \cf0 10. Seeing your results. \
\
In the Run Log window, \
you will see the ten "Hello, printf" statements and the number of microseconds to run.\
\
Your ten "Hello, FireLog" messages will show up in the FireLog window on the \
observer machine. It will also show the time elapsed in microseconds.\
\
}